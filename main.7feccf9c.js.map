{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","sortList","value","newList","children","sorting","item","dataset","salary","replace","sort","item1","item2","getEmployers","remove","prepend"],"mappings":";AAAA,aAkBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhBA,IAAMA,EAAOC,SAASC,cAAc,MAEpC,SAASC,EAASC,GACVC,IAAAA,EAAcD,EAAAA,EAAME,UACpBC,EAAU,SAAAC,GAAQA,OAAAA,EAAKC,QAAQC,OAAOC,QAAQ,UAAW,KAExDN,OAAAA,EAAQO,KAAK,SAACC,EAAOC,GAAUP,OAAAA,EAAQM,GAASN,EAAQO,KAGjE,SAASC,EAAaX,GACDA,IADQ,EACRA,EAAAA,EAAAA,GADQ,IACD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfI,IAAAA,EAAe,EAAA,MACxBA,EAAKQ,SACLhB,EAAKiB,QAAQT,IAHY,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAO7BO,EAAaZ,EAASH","file":"main.7feccf9c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\n\nfunction sortList(value) {\n  const newList = [...value.children];\n  const sorting = item => item.dataset.salary.replace(/[^0-9]/g, '');\n\n  return newList.sort((item1, item2) => sorting(item1) - sorting(item2));\n}\n\nfunction getEmployers(value) {\n  for (const item of value) {\n    item.remove();\n    list.prepend(item);\n  }\n}\n\ngetEmployers(sortList(list));\n"]}